# Welcome to Serverless!
#
# This is a base service config for Zetifi
# See README.md for more information
#
# For full config options, check the docs:
#    docs.serverless.com

service: lambda-function-latest # Use the same name as the repository without "zetifi-serverless-"
frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-iam-roles-per-function
  - serverless-python-requirements
  - serverless-plugin-aws-alerts
  - serverless-plugin-git-variables

package:
  patterns:
    - "!node_modules/**"
    - "!tests/**"
    - "!.vscode/**"
    - "!.pytest_cache/**"
    - "!tf*/**"
    - "!.github/**"

custom:
  exportGitVariables: false
  pythonRequirements:
    useStaticCache: false
    slim: true
    # pipCmdExtraArgs: ['--platform manylinux2014_x86_64', '--only-binary=:all:']
    dockerizePip: true # Best practice for compatibility.
    # Set explicitly when required for private pip installs.
    dockerEnv:
     - GITHUB_TOKEN=${env:GITHUB_TOKEN}

provider:
  name: aws
  runtime: python3.11
  versionFunctions: false
  stage: ${opt:stage, "dev"}
  region: ap-southeast-2
  logRetentionInDays: 365
  memorySize: 256
  deploymentBucket:
    name: serverless-${aws:accountId}-${aws:region}
  stackTags:
    GIT_REPOSITORY: ${git:repository}
    GIT_BRANCH: ${git:branch}
    GIT_COMMIT_SHORT: ${git:sha1}
    GIT_TAGS: ${git:tags}


functions:
  hello:
    handler: app.main.handler
    description: A simple hello world function
    events:
      - http:
          path: /
          method: get
          cors: true

resources:
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}
        AccessControl: Private
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}



